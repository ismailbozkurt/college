/* Generated By:JavaCC: Do not edit this line. Babel2009Constants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface Babel2009Constants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int COMMENT = 7;
  /** RegularExpression Id. */
  int A = 8;
  /** RegularExpression Id. */
  int CADENA = 9;
  /** RegularExpression Id. */
  int CICLE = 10;
  /** RegularExpression Id. */
  int CONST = 11;
  /** RegularExpression Id. */
  int DE = 12;
  /** RegularExpression Id. */
  int ESCRIURE = 13;
  /** RegularExpression Id. */
  int FER = 14;
  /** RegularExpression Id. */
  int FICICLE = 15;
  /** RegularExpression Id. */
  int FIFUNC = 16;
  /** RegularExpression Id. */
  int FIPER = 17;
  /** RegularExpression Id. */
  int FIPROG = 18;
  /** RegularExpression Id. */
  int FISI = 19;
  /** RegularExpression Id. */
  int FUNCIO = 20;
  /** RegularExpression Id. */
  int INICI = 21;
  /** RegularExpression Id. */
  int LLAVORS = 22;
  /** RegularExpression Id. */
  int LLEGIR = 23;
  /** RegularExpression Id. */
  int PER = 24;
  /** RegularExpression Id. */
  int PROGRAMA = 25;
  /** RegularExpression Id. */
  int REF = 26;
  /** RegularExpression Id. */
  int RETORNAR = 27;
  /** RegularExpression Id. */
  int SI = 28;
  /** RegularExpression Id. */
  int SINO = 29;
  /** RegularExpression Id. */
  int SURTCICLE = 30;
  /** RegularExpression Id. */
  int TRIM = 31;
  /** RegularExpression Id. */
  int VAL = 32;
  /** RegularExpression Id. */
  int VAR = 33;
  /** RegularExpression Id. */
  int VECTOR = 34;
  /** RegularExpression Id. */
  int CTE_LOGICA = 35;
  /** RegularExpression Id. */
  int CTE_ENTERA = 36;
  /** RegularExpression Id. */
  int CTE_CADENA = 37;
  /** RegularExpression Id. */
  int OPER_REL = 38;
  /** RegularExpression Id. */
  int TIPUS_SIMPLE = 39;
  /** RegularExpression Id. */
  int OP_AND = 40;
  /** RegularExpression Id. */
  int OP_OR = 41;
  /** RegularExpression Id. */
  int OP_NOT = 42;
  /** RegularExpression Id. */
  int OP_MAS = 43;
  /** RegularExpression Id. */
  int OP_MENOS = 44;
  /** RegularExpression Id. */
  int OP_MUL = 45;
  /** RegularExpression Id. */
  int OP_DIV = 46;
  /** RegularExpression Id. */
  int OP_CONCAT = 47;
  /** RegularExpression Id. */
  int IGUAL = 48;
  /** RegularExpression Id. */
  int MENOSIGUAL = 49;
  /** RegularExpression Id. */
  int MASIGUAL = 50;
  /** RegularExpression Id. */
  int CONCATIGUAL = 51;
  /** RegularExpression Id. */
  int PCOMA = 52;
  /** RegularExpression Id. */
  int DPUNTS = 53;
  /** RegularExpression Id. */
  int PARENTOBERT = 54;
  /** RegularExpression Id. */
  int PARENTTANCAT = 55;
  /** RegularExpression Id. */
  int COMA = 56;
  /** RegularExpression Id. */
  int CORXETOBERT = 57;
  /** RegularExpression Id. */
  int CORXETTANCAT = 58;
  /** RegularExpression Id. */
  int PUNTPUNT = 59;
  /** RegularExpression Id. */
  int ID = 60;
  /** RegularExpression Id. */
  int LLETRA = 61;
  /** RegularExpression Id. */
  int DIGIT = 62;
  /** RegularExpression Id. */
  int ERROR = 63;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\b\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"//\"",
    "<COMMENT>",
    "\"a\"",
    "\"cadena\"",
    "\"cicle\"",
    "\"const\"",
    "\"de\"",
    "\"escriure\"",
    "\"fer\"",
    "\"ficicle\"",
    "\"fifunc\"",
    "\"fiper\"",
    "\"fiprog\"",
    "\"fisi\"",
    "\"funcio\"",
    "\"inici\"",
    "\"llavors\"",
    "\"llegir\"",
    "\"per\"",
    "\"programa\"",
    "\"ref\"",
    "\"retornar\"",
    "\"si\"",
    "\"sino\"",
    "\"surtcicle\"",
    "\"trim\"",
    "\"val\"",
    "\"var\"",
    "\"vector\"",
    "<CTE_LOGICA>",
    "<CTE_ENTERA>",
    "<CTE_CADENA>",
    "<OPER_REL>",
    "<TIPUS_SIMPLE>",
    "<OP_AND>",
    "<OP_OR>",
    "<OP_NOT>",
    "<OP_MAS>",
    "<OP_MENOS>",
    "<OP_MUL>",
    "<OP_DIV>",
    "<OP_CONCAT>",
    "<IGUAL>",
    "<MENOSIGUAL>",
    "<MASIGUAL>",
    "<CONCATIGUAL>",
    "<PCOMA>",
    "<DPUNTS>",
    "<PARENTOBERT>",
    "<PARENTTANCAT>",
    "<COMA>",
    "<CORXETOBERT>",
    "<CORXETTANCAT>",
    "<PUNTPUNT>",
    "<ID>",
    "<LLETRA>",
    "<DIGIT>",
    "<ERROR>",
  };

}
